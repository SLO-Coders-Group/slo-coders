"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("./common");
class Allowlist {
    /**
     * @param input the allowlisted module names, advisories, and module paths
     */
    constructor(input) {
        this.modules = [];
        this.advisories = [];
        this.paths = [];
        if (!input) {
            return;
        }
        for (const allowlist of input) {
            if (typeof allowlist === "number") {
                throw new TypeError("Unsupported number as allowlist. Perform codemod to update config to use GitHub advisory as identifiers: https://github.com/quinnturner/audit-ci-codemod with `npx @quinnturner/audit-ci-codemod`. See also: https://github.com/IBM/audit-ci/pull/217");
            }
            if (allowlist.includes(">") || allowlist.includes("|")) {
                this.paths.push(allowlist);
            }
            else if ((0, common_1.isGitHubAdvisoryId)(allowlist)) {
                this.advisories.push(allowlist);
            }
            else {
                this.modules.push(allowlist);
            }
        }
    }
    static mapConfigToAllowlist(config) {
        const { allowlist } = config;
        const deduplicatedAllowlist = (0, common_1.deduplicate)(allowlist || []);
        const allowlistObject = new Allowlist(deduplicatedAllowlist);
        return allowlistObject;
    }
}
exports.default = Allowlist;
//# sourceMappingURL=allowlist.js.map